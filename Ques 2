#include <stdio.h>
#include <stdlib.h>
#define MAX 5  
struct Stack {
    int arr[MAX];  
    int top;
};
void initializeStack(struct Stack* stack) {
    stack->top = -1;
}
int isFull(struct Stack* stack) {
    if (stack->top == MAX - 1) {
        return 1;  
    }
    return 0;
}
int isEmpty(struct Stack* stack) {
    if (stack->top == -1) {
        return 1;  
    }
    return 0;
}
void push(struct Stack* stack, int value) {
    if (isFull(stack)) {
        printf("Stack Overflow! Cannot push %d\n", value);
        return;
    }
    stack->arr[++(stack->top)] = value;  
    printf("%d pushed to stack\n", value);
}
int pop(struct Stack* stack) {
    if (isEmpty(stack)) {
        printf("Stack Underflow! No elements to pop\n");
        return -1;  
    }
    int poppedValue = stack->arr[(stack->top)--];  
    return poppedValue;
}
void display(struct Stack* stack) {
    if (isEmpty(stack)) {
        printf("Stack is empty\n");
        return;
    }
    printf("Stack elements are: ");
    for (int i = 0; i <= stack->top; i++) {
        printf("%d ", stack->arr[i]);
    }
    printf("\n");
}
int main() {
    struct Stack stack;  
    initializeStack(&stack);  
    push(&stack, 10);
    push(&stack, 20);
    push(&stack, 30);
    push(&stack, 40);
    push(&stack, 50);
    push(&stack, 60);  
    display(&stack);
    printf("Popped element: %d\n", pop(&stack));  
    printf("Popped element: %d\n", pop(&stack));  
    display(&stack);
    return 0;
}
